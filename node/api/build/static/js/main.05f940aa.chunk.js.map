{"version":3,"sources":["global/helpers.js","context/userContext.js","config/constants.js","global/apiFetch.js","services/ingredientsService.js","services/recipesService.js","services/usersService.js","components/SearchBar/Dropdown.js","components/SearchBar/Autocomplete.js","components/SearchBar/IngredientsList.js","components/SearchBar/index.js","components/RecipesList/RecipeItem.js","components/RecipesList/index.js","pages/Home.js","components/RecipeForm/index.js","pages/NewRecipe.js","pages/Login.js","pages/Register.js","components/App/ProtectedRoute.js","components/Logout/index.js","components/Navigation/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["generateId","length","characters","charactersLength","result","i","charAt","Math","floor","random","isSuccessResponse","response","Object","status","getDataFromResponse","data","ACTION_TYPES","DEFAULT_STATE","user","loading","error","UserStateContext","React","createContext","UserDispatchContext","userReducer","state","action","type","payload","token","expires_at","jwt","decode","Error","useUserState","context","useContext","undefined","useUserDispatch","refresh","dispatch","a","UsersService","setInterval","login","register","logout","UserProvider","children","useReducer","setUser","useEffect","interval","clearInterval","Provider","value","backendApi","defaultHeaders","apiFetch","get","url","fetch","json","post","serviceOptions","options","method","headers","put","delete","base","useIngredientsService","search","q","add","name","body","JSON","stringify","credentials","Authorization","useRecipesService","thumbnail","prep_time","cook_time","yields","servings","steps","ingredients","suggest","email","password","confirm_password","Dropdown","props","canAddNew","items","onClickAddNew","onSelect","style","position","top","left","padding","background","display","trim","onClick","map","ingredient","key","uuid","data-uuid","defaultProps","Autocomplete","onChange","IngredientsList","handleRemove","margin","border","marginRight","marginLeft","SearchBar","onChangeIngredients","ingredientsService","useState","searchInputValue","setSearchInputValue","suggestedIngredients","setSuggestedIngredients","selectedIngredients","setSelectedIngredients","filtered","filter","some","d","fetchIngredients","uuids","e","target","dataset","find","RecipeItem","item","src","width","alt","RecipesList","gridTemplateColumns","columnGap","Home","recipeService","suggestedRecipes","setSuggestedRecipes","queryString","join","RecipeForm","recipesService","ingredientValue","setIngredientValue","setSteps","form","setForm","handleChange","prevForm","handleChangeIngredientData","prevIngredients","handleStep","prevSteps","handleSubmit","preventDefault","keys","unit","amount","console","log","onClickAddNewIngredient","onSubmit","htmlFor","id","placeholder","ingredientData","data-key","NewRecipe","Login","history","useHistory","location","useLocation","setEmail","setPassword","hasError","setHasError","isLoading","setIsLoading","from","pathname","replace","disabled","Register","confirmPassword","setConfirmPassword","errors","setErrors","res","showErrors","message","ProtectedRoute","component","role","userData","isAuthenticated","setIsAuthenticated","isAuthorized","setIsAuthorized","Component","checkAuthorized","to","Logout","handleClick","href","Navigation","userState","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.05f940aa.chunk.js","sourcesContent":["export const generateId = (length = 5) => {\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  const charactersLength = characters.length\n  let result = ''\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength))\n  }\n\n  return result\n}\n\nexport const isSuccessResponse = (response) => {\n  const successStatus = 'success'\n\n  if (response instanceof Object) {\n    return response.status === successStatus\n  }\n\n  return response === successStatus\n}\n\nexport const getDataFromResponse = (response) => {\n  return response.data\n}\n","import React, { useContext, useReducer } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { UsersService } from '../services'\nimport { isSuccessResponse } from '../global/helpers'\n\nconst ACTION_TYPES = {\n  request: 'REQUEST',\n  success: 'SUCCESS',\n  error: 'ERROR'\n}\n\nconst DEFAULT_STATE = {\n  status: ACTION_TYPES.request,\n  user: {},\n  loading: true,\n  error: {}\n}\n\nconst UserStateContext = React.createContext(DEFAULT_STATE)\nconst UserDispatchContext = React.createContext({})\n\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.request: {\n      return {\n        ...DEFAULT_STATE,\n        status: ACTION_TYPES.request,\n        user: state.user,\n        loading: true\n      }\n    }\n    case ACTION_TYPES.success: {\n      let user = {}\n\n      if (action.payload.data && action.payload.data.token) {\n        const {\n          data: { token, expires_at }\n        } = action.payload\n\n        user = {\n          ...jwt.decode(token),\n          token,\n          expires_at\n        }\n      }\n\n      return {\n        ...DEFAULT_STATE,\n        status: ACTION_TYPES.success,\n        user\n      }\n    }\n    case ACTION_TYPES.error: {\n      return {\n        ...DEFAULT_STATE,\n        status: ACTION_TYPES.error,\n        error: action.error\n      }\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`)\n    }\n  }\n}\n\nconst useUserState = () => {\n  const context = useContext(UserStateContext)\n  if (context === undefined) {\n    throw new Error('useUserState must be used within a UserProvider')\n  }\n  return context\n}\n\nconst useUserDispatch = () => {\n  const context = useContext(UserDispatchContext)\n  if (context === undefined) {\n    throw new Error('useUserDispatch must be used within a UserProvider')\n  }\n  return context\n}\n\nconst refresh = async (dispatch) => {\n  dispatch({ type: ACTION_TYPES.request, loading: true })\n  try {\n    const payload = await UsersService.refresh()\n\n    if (isSuccessResponse(payload)) {\n      dispatch({ type: ACTION_TYPES.success, payload })\n    } else {\n      dispatch({ type: ACTION_TYPES.error, error: payload })\n    }\n\n    return setInterval(async () => {\n      const payload = await UsersService.refresh()\n\n      if (isSuccessResponse(payload)) {\n        dispatch({ type: ACTION_TYPES.success, payload })\n      } else {\n        dispatch({ type: ACTION_TYPES.error, error: payload })\n      }\n    }, 300000)\n  } catch (error) {\n    dispatch({ type: ACTION_TYPES.error, error })\n  }\n}\n\nconst login = async (dispatch, data) => {\n  dispatch({ type: ACTION_TYPES.request, loading: true })\n  try {\n    const payload = await UsersService.login(data)\n\n    if (isSuccessResponse(payload)) {\n      dispatch({ type: ACTION_TYPES.success, payload })\n      return payload\n    } else {\n      throw payload\n    }\n  } catch (error) {\n    dispatch({ type: ACTION_TYPES.error, error })\n    return error\n  }\n}\n\nconst register = async (dispatch, data) => {\n  dispatch({ type: ACTION_TYPES.request, loading: true })\n  try {\n    const payload = await UsersService.register(data)\n\n    if (isSuccessResponse(payload)) {\n      dispatch({ type: ACTION_TYPES.success, payload })\n      return payload\n    } else {\n      throw payload\n    }\n  } catch (error) {\n    dispatch({ type: ACTION_TYPES.error, error })\n    return error\n  }\n}\n\nconst logout = async (dispatch) => {\n  dispatch({ type: ACTION_TYPES.request, loading: true })\n  try {\n    const payload = await UsersService.logout()\n\n    if (isSuccessResponse(payload)) {\n      dispatch({ type: ACTION_TYPES.success, payload })\n      return payload\n    } else {\n      throw payload\n    }\n  } catch (error) {\n    dispatch({ type: ACTION_TYPES.error, error })\n    return error\n  }\n}\n\nconst useUser = () => {\n  return [useUserState(), useUserDispatch()]\n}\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useReducer(userReducer, DEFAULT_STATE)\n\n  React.useEffect(() => {\n    const interval = refresh(setUser)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n  return (\n    <UserStateContext.Provider value={user}>\n      <UserDispatchContext.Provider value={setUser}>{children}</UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  )\n}\n\nexport { UserProvider, useUserState, useUserDispatch, useUser, login, logout, register }\n","const backendApi = {\n  base: 'http://localhost:4000/api/v1'\n}\n\nexport { backendApi }\n","const defaultHeaders = {\n  'Content-Type': 'application/json'\n}\n\nconst apiFetch = {\n  get: async (url) => {\n    const data = await fetch(url)\n    return data.json()\n  },\n\n  post: async (url, serviceOptions) => {\n    const options = {\n      method: 'POST',\n      ...serviceOptions\n    }\n    options.headers = { ...defaultHeaders, ...options.headers }\n\n    const data = await fetch(url, options)\n    return data.json()\n  },\n\n  put: async (url, serviceOptions) => {\n    const options = {\n      method: 'PUT',\n      ...serviceOptions\n    }\n    options.headers = { ...defaultHeaders, ...options.headers }\n\n    const data = await fetch(url, options)\n    return data.json()\n  },\n\n  delete: async (url, serviceOptions) => {\n    const options = {\n      method: 'DELETE',\n      ...serviceOptions\n    }\n    options.headers = { ...defaultHeaders, ...options.headers }\n\n    const data = await fetch(url, options)\n    return data.json()\n  }\n}\n\nexport default apiFetch\n","import { useUserState } from '../context/userContext'\nimport { backendApi } from '../config/constants'\nimport apiFetch from '../global/apiFetch'\n\nconst { base } = backendApi\nconst path = '/ingredients'\n\nconst useIngredientsService = () => {\n  const user = useUserState()\n\n  const search = async (q) => {\n    return await apiFetch.get(`${base}${path}/search?q=${q}`)\n  }\n\n  const add = async ({ name }) => {\n    const options = {\n      body: JSON.stringify({ name }),\n      credentials: 'include',\n      headers: {\n        Authorization: `Bearer ${user.user.token}`\n      }\n    }\n\n    return await apiFetch.post(`${base}${path}/new`, options)\n  }\n\n  return { search, add }\n}\n\nexport default useIngredientsService\n","import { useUserState } from '../context/userContext'\nimport { backendApi } from '../config/constants'\nimport apiFetch from '../global/apiFetch'\n\nconst { base } = backendApi\nconst path = '/recipes'\n\nconst useRecipesService = () => {\n  const user = useUserState()\n\n  const add = async ({ name, thumbnail, prep_time, cook_time, yields, servings, steps, ingredients }) => {\n    const body = {\n      name,\n      thumbnail,\n      prep_time,\n      cook_time,\n      yields,\n      servings,\n      steps,\n      ingredients\n    }\n\n    const options = {\n      body: JSON.stringify(body),\n      credentials: 'include',\n      headers: {\n        Authorization: `Bearer ${user.user.token}`\n      }\n    }\n\n    return await apiFetch.post(`${base}${path}/new`, options)\n  }\n\n  const suggest = async (q) => {\n    return await apiFetch.get(`${base}${path}/suggest?${q}`)\n  }\n\n  return { add, suggest }\n}\n\nexport default useRecipesService\n","import { backendApi } from '../config/constants'\nimport apiFetch from '../global/apiFetch'\n\nconst { base } = backendApi\nconst path = '/users'\n\nconst UsersService = {\n  login: async ({ email, password }) => {\n    const options = {\n      body: JSON.stringify({ email, password }),\n      credentials: 'include'\n    }\n\n    return await apiFetch.post(`${base}${path}/login`, options)\n  },\n\n  register: async ({ email, password, confirm_password }) => {\n    const options = {\n      body: JSON.stringify({ email, password, confirm_password }),\n      credentials: 'include'\n    }\n\n    return await apiFetch.post(`${base}${path}/register`, options)\n  },\n\n  refresh: async () => {\n    const options = {\n      credentials: 'include'\n    }\n\n    return await apiFetch.post(`${base}${path}/refresh`, options)\n  },\n\n  logout: async () => {\n    const options = {\n      credentials: 'include'\n    }\n\n    return await apiFetch.post(`${base}${path}/logout`, options)\n  }\n}\n\nexport default UsersService\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Dropdown = (props) => {\n  const { canAddNew, items, onClickAddNew, onSelect, value } = props\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div\n        style={{\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          padding: '10px',\n          background: '#FFF',\n          display: value.trim().length > 0 ? 'block' : 'none'\n        }}\n      >\n        {canAddNew && (\n          <p onClick={onClickAddNew}>\n            Add <b>{value}</b>\n          </p>\n        )}\n        {items.map((ingredient) => (\n          <p\n            key={ingredient.uuid}\n            data-uuid={ingredient.uuid}\n            onClick={onSelect}\n          >\n            {ingredient.name}\n          </p>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nDropdown.propTypes = {\n  canAddNew: PropTypes.bool,\n  items: PropTypes.array,\n  onClickAddNew: PropTypes.func,\n  onSelect: PropTypes.func,\n  value: PropTypes.string\n}\n\nDropdown.defaultProps = {\n  canAddNew: false,\n  items: [],\n  onClickAddNew: () => {},\n  onSelect: () => {},\n  value: ''\n}\n\nexport default Dropdown\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dropdown from './Dropdown'\n\nconst Autocomplete = (props) => {\n  const { canAddNew, items, onChange, onClickAddNew, onSelect, value } = props\n\n  return (\n    <>\n      <input type='text' value={value} onChange={onChange} />\n      <Dropdown\n        canAddNew={canAddNew}\n        items={items}\n        onClickAddNew={onClickAddNew}\n        onSelect={onSelect}\n        value={value}\n      />\n    </>\n  )\n}\n\nAutocomplete.propTypes = {\n  canAddNew: PropTypes.bool,\n  items: PropTypes.array,\n  onChange: PropTypes.func.isRequired,\n  onClickAddNew: PropTypes.func,\n  onSelect: PropTypes.func,\n  value: PropTypes.string.isRequired\n}\n\nAutocomplete.defaultProps = {\n  canAddNew: false,\n  items: [],\n  onClickAddNew: () => {},\n  onSelect: () => {}\n}\n\nexport default Autocomplete\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst IngredientsList = props => {\n  const { handleRemove, items } = props\n\n  return (\n    <div style={{ margin: '10px' }}>\n        {items.map((ingredient) => (\n          <span\n            key={ingredient.uuid}\n            style={{\n              border: 'solid 1px lightgray',\n              marginRight: '10px',\n              padding: '5px',\n            }}\n          >\n            {ingredient.name}\n            <button\n              onClick={handleRemove}\n              data-uuid={ingredient.uuid}\n              style={{ marginLeft: '10px' }}\n            >\n              X\n            </button>\n          </span>\n        ))}\n      </div>\n  )\n}\n\nIngredientsList.propTypes = {\n  handleRemove: PropTypes.func.isRequired,\n  items: PropTypes.array\n}\n\nIngredientsList.defaultProps = {\n  items: []\n}\n\nexport default IngredientsList","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useIngredientsService } from '../../services'\nimport Autocomplete from './Autocomplete'\nimport IngredientsList from './IngredientsList'\nimport { isSuccessResponse, getDataFromResponse } from '../../global/helpers'\n\nconst SearchBar = (props) => {\n  const { onChangeIngredients } = props\n\n  const ingredientsService = useIngredientsService()\n  const [searchInputValue, setSearchInputValue] = useState('')\n  const [suggestedIngredients, setSuggestedIngredients] = useState([])\n  const [selectedIngredients, setSelectedIngredients] = useState([])\n\n  /**\n   * User writes in the input\n   *\n   * @param {object} e\n   */\n  const handleChange = (e) => {\n    const value = e.target.value\n    setSearchInputValue(value)\n  }\n\n  /**\n   * User selected an ingredient in the dropdown\n   *\n   * @param {object} e\n   */\n  const handleClickIngredient = (e) => {\n    const uuid = e.target.dataset.uuid\n    const ingredient = suggestedIngredients.find((d) => d.uuid === uuid)\n\n    if (ingredient) {\n      setSelectedIngredients([...selectedIngredients, ingredient])\n      setSuggestedIngredients([])\n      setSearchInputValue('')\n    }\n  }\n\n  /**\n   * User removed a selected ingredient\n   *\n   * @param {object} e\n   */\n  const handleRemove = (e) => {\n    const uuid = e.target.dataset.uuid\n    const ingredient = selectedIngredients.find((d) => d.uuid === uuid)\n\n    if (ingredient) {\n      setSelectedIngredients(\n        selectedIngredients.filter((d) => d.uuid !== ingredient.uuid)\n      )\n    }\n  }\n\n  /**\n   * List of selected ingredients changed\n   */\n  const handleIngredientsChange = () => {\n    const uuids = selectedIngredients.map((ingredient) => ingredient.uuid)\n    onChangeIngredients(uuids)\n  }\n\n  /**\n   * Call the API to fetch the suggested ingredients\n   */\n  useEffect(() => {\n    const fetchIngredients = async () => {\n      if (searchInputValue.trim().length > 0) {\n        const response = await ingredientsService.search(searchInputValue)\n\n\n        if (isSuccessResponse(response)) {\n          const data = getDataFromResponse(response)\n          \n          const filtered = data.filter((ingredient) => {\n            return !selectedIngredients.some((d) => d.uuid === ingredient.uuid)\n          })\n  \n          setSuggestedIngredients(filtered)\n        }\n      } else {\n        setSuggestedIngredients([])\n      }\n    }\n\n    fetchIngredients()\n  }, [searchInputValue])\n\n  useEffect(handleIngredientsChange, [selectedIngredients])\n\n  return (\n    <div>\n      <Autocomplete\n        items={suggestedIngredients}\n        onChange={handleChange}\n        onSelect={handleClickIngredient}\n        value={searchInputValue}\n      />\n      <IngredientsList\n        handleRemove={handleRemove}\n        items={selectedIngredients}\n      />\n    </div>\n  )\n}\n\nSearchBar.propTypes = {\n  onChangeIngredients: PropTypes.func.isRequired\n}\n\nexport default SearchBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RecipeItem = (props) => {\n  const { item } = props\n\n  return (\n    <div>\n      <img src={item.thumbnail} width='100%' alt={item.name} />\n      <p>{item.name}</p>\n    </div>\n  )\n}\n\nRecipeItem.propTypes = {\n  item: PropTypes.object\n}\n\nRecipeItem.defaultProps = {\n  item: {}\n}\n\nexport default RecipeItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport RecipeItem from './RecipeItem'\n\nconst RecipesList = (props) => {\n  const { items } = props\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr)',\n        columnGap: '20px'\n      }}\n    >\n      {items.map((item) => (\n        <RecipeItem item={item} key={item.uuid} />\n      ))}\n    </div>\n  )\n}\n\nRecipesList.propTypes = {\n  items: PropTypes.array\n}\n\nRecipesList.defaultProps = {\n  items: []\n}\n\nexport default RecipesList\n","import React, { useState } from 'react'\nimport SearchBar from '../components/SearchBar'\nimport RecipesList from '../components/RecipesList'\nimport { useRecipesService } from '../services'\nimport { getDataFromResponse, isSuccessResponse } from '../global/helpers'\n\nconst Home = () => {\n  const recipeService = useRecipesService()\n  const [ suggestedRecipes, setSuggestedRecipes ] = useState([])\n\n  const onChangeIngredients = async uuids => {\n    if (uuids.length > 0) {\n      const queryString = uuids\n        .map((uuid) => {\n          return `uuids[]=${uuid}`\n        })\n        .join('&')\n\n      const response = await recipeService.suggest(queryString)\n      \n      if (isSuccessResponse(response)) {\n        const data = getDataFromResponse(response)\n        setSuggestedRecipes(data)\n      }\n    } else {\n      setSuggestedRecipes([])\n    }\n  }\n\n  return (\n    <>\n      <SearchBar onChangeIngredients={onChangeIngredients} />\n      <RecipesList items={suggestedRecipes} />\n    </>\n  )\n}\n\nexport default Home","import React, { useState, useEffect } from 'react'\nimport { useIngredientsService, useRecipesService } from '../../services'\nimport { generateId, getDataFromResponse, isSuccessResponse } from '../../global/helpers'\nimport Autocomplete from '../SearchBar/Autocomplete'\n\nconst RecipeForm = () => {\n  const recipesService = useRecipesService()\n  const ingredientsService = useIngredientsService()\n  const [ingredientValue, setIngredientValue] = useState('')\n  const [suggestedIngredients, setSuggestedIngredients] = useState([])\n  const [selectedIngredients, setSelectedIngredients] = useState([])\n  const [steps, setSteps] = useState({ [generateId(5)]: '' })\n  const [form, setForm] = useState({\n    name: '',\n    thumbnail: '',\n    prep_time: 0,\n    cook_time: 0,\n    yields: 0,\n    servings: 0\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n\n    setForm((prevForm) => ({\n      ...prevForm,\n      [name]: value\n    }))\n  }\n\n  const handleChangeIngredientData = (e) => {\n    const {\n      name,\n      value,\n      dataset: { key }\n    } = e.target\n\n    setSelectedIngredients((prevIngredients) => ({\n      ...prevIngredients,\n      [key]: { ...prevIngredients[key], [name]: value }\n    }))\n  }\n\n  const onClickAddStep = (e) => {\n    e.preventDefault()\n\n    setSteps((prevSteps) => ({\n      ...prevSteps,\n      [generateId(5)]: ''\n    }))\n  }\n\n  const handleStep = (e) => {\n    const {\n      dataset: { key },\n      value\n    } = e.target\n\n    setSteps((prevSteps) => ({\n      ...prevSteps,\n      [key]: value\n    }))\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const data = {\n      ...form,\n      steps: Object.keys(steps).map((key) => steps[key]),\n      ingredients: Object.keys(selectedIngredients).map((key) => {\n        const ingredient = selectedIngredients[key]\n        const { uuid, unit, amount } = ingredient\n\n        return {\n          uuid,\n          unit,\n          amount\n        }\n      })\n    }\n\n    const response = await recipesService.add(data)\n    console.log(response)\n  }\n\n  const onChange = (e) => {\n    const value = e.target.value\n    setIngredientValue(value)\n  }\n\n  /**\n   * User selected an ingredient in the dropdown\n   *\n   * @param {object} e\n   */\n  const onSelectIngredient = (e) => {\n    const uuid = e.target.dataset.uuid\n    const ingredient = suggestedIngredients.find((d) => d.uuid === uuid)\n    const ingredientData = {\n      uuid: ingredient.uuid,\n      name: ingredient.name,\n      unit: '',\n      amount: 0\n    }\n\n    if (ingredient) {\n      setSelectedIngredients((prevIngredients) => ({\n        ...prevIngredients,\n        [generateId(5)]: ingredientData\n      }))\n      setSuggestedIngredients([])\n      setIngredientValue('')\n    }\n  }\n\n  const onClickAddNewIngredient = async () => {\n    if (ingredientValue.trim().length > 0) {\n      const response = await ingredientsService.add({ name: ingredientValue })\n\n      if (isSuccessResponse(response)) {\n        const data = getDataFromResponse(response)\n\n        setSelectedIngredients((prevIngredients) => ({\n          ...prevIngredients,\n          [generateId(5)]: data\n        }))\n        setSuggestedIngredients([])\n        setIngredientValue('')\n      }\n    }\n  }\n\n  /**\n   * Call the API to fetch the suggested ingredients\n   */\n  useEffect(() => {\n    const fetchIngredients = async () => {\n      if (ingredientValue.trim().length > 0) {\n        const response = await ingredientsService.search(ingredientValue)\n\n        if (isSuccessResponse(response)) {\n          const data = getDataFromResponse(response)\n          const filtered = data.filter((ingredient) => {\n            return !Object.keys(selectedIngredients).some((key) => selectedIngredients[key].uuid === ingredient.uuid)\n          })\n  \n          setSuggestedIngredients(filtered)\n        }\n      } else {\n        setSuggestedIngredients([])\n      }\n    }\n\n    fetchIngredients()\n  }, [ingredientValue])\n\n  return (\n    <form action='#' onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor='name'>\n          Name\n          <input\n            onChange={handleChange}\n            value={form.name}\n            id='name'\n            type='text'\n            name='name'\n            placeholder='Recipe name'\n            style={{ display: 'block' }}\n          />\n        </label>\n      </div>\n\n      <div>\n        <p>Ingredients</p>\n        <Autocomplete\n          canAddNew={true}\n          items={suggestedIngredients}\n          value={ingredientValue}\n          onChange={onChange}\n          onClickAddNew={onClickAddNewIngredient}\n          onSelect={onSelectIngredient}\n        />\n        {Object.keys(selectedIngredients).map((key) => (\n          <div key={key}>\n            <p>{selectedIngredients[key].name}</p>\n            <input\n              onChange={handleChangeIngredientData}\n              data-key={key}\n              type='text'\n              name='unit'\n              value={selectedIngredients[key].unit}\n            />\n            <input\n              onChange={handleChangeIngredientData}\n              data-key={key}\n              type='number'\n              name='amount'\n              value={selectedIngredients[key].amount}\n            />\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <label htmlFor='thumbnail'>\n          Thumbnail URL\n          <input\n            onChange={handleChange}\n            value={form.thumbnail}\n            id='thumbnail'\n            type='text'\n            name='thumbnail'\n            placeholder='Thumbnail URL'\n            style={{ display: 'block' }}\n          />\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor='prep_time'>\n          Preparation Time (minutes)\n          <input\n            onChange={handleChange}\n            value={form.prep_time}\n            id='prep_time'\n            type='number'\n            name='prep_time'\n            placeholder='Preparation time (minutes)'\n            style={{ display: 'block' }}\n          />\n        </label>\n\n        <label htmlFor='cook_time'>\n          Cooking Time (minutes)\n          <input\n            onChange={handleChange}\n            value={form.cook_time}\n            id='cook_time'\n            type='number'\n            name='cook_time'\n            placeholder='Cooking time (minutes)'\n            style={{ display: 'block' }}\n          />\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor='yields'>\n          Yields\n          <input\n            onChange={handleChange}\n            value={form.yields}\n            id='yields'\n            type='number'\n            name='yields'\n            placeholder='Yields'\n            style={{ display: 'block' }}\n          />\n        </label>\n\n        <label htmlFor='servings'>\n          Servings\n          <input\n            onChange={handleChange}\n            value={form.servings}\n            id='servings'\n            type='number'\n            name='servings'\n            placeholder='Servings'\n            style={{ display: 'block' }}\n          />\n        </label>\n      </div>\n\n      <div>\n        <p>Steps</p>\n        {Object.keys(steps).map((key) => (\n          <div key={key}>\n            <input\n              data-key={key}\n              onChange={handleStep}\n              value={steps[key].value}\n              type='text'\n              name='steps[]'\n              placeholder='Step'\n              style={{ display: 'block' }}\n            />\n          </div>\n        ))}\n        <div>\n          <button onClick={onClickAddStep}>Add a step</button>\n        </div>\n      </div>\n\n      <div>\n        <button type='submit'>Send</button>\n      </div>\n    </form>\n  )\n}\n\nexport default RecipeForm\n","import React from 'react'\nimport RecipeForm from '../components/RecipeForm'\n\nconst NewRecipe = () => {\n  return (\n    <div>\n      <h1>New Recipe</h1>\n\n      <RecipeForm />\n    </div>\n  )\n}\n\nexport default NewRecipe\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useUserDispatch, login } from '../context/userContext'\n\nconst Login = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const dispatch = useUserDispatch()\n  \n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [hasError, setHasError] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const errorMessage = 'Email address or password is incorrect. Please try again.'\n\n  const handleChange = (e) => {\n    const {\n      target: { name, value }\n    } = e\n\n    switch (name) {\n      case 'email':\n        setEmail(value)\n        break\n      case 'password':\n        setPassword(value)\n        break\n      default:\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    setHasError(false)\n    setIsLoading(true)\n    const data = { email, password }\n    const res = await login(dispatch, data)\n    \n    if (res.status === 'success') {\n      const { from } = location.state || { from: { pathname: '/' } }\n      setIsLoading(false)\n      history.replace(from)\n    } else {\n      setHasError(true)\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} action='#'>\n      { hasError &&\n      <p>{errorMessage}</p>\n      }\n      <input onChange={handleChange} name='email' type='email' value={email} />\n      <input onChange={handleChange} name='password' type='password' value={password} />\n      <button type='submit' disabled={isLoading}>Login</button>\n    </form>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useUserDispatch, register } from '../context/userContext'\nimport { isSuccessResponse } from '../global/helpers'\n\nconst Register = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const dispatch = useUserDispatch()\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [errors, setErrors] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleChange = (e) => {\n    const {\n      target: { name, value }\n    } = e\n\n    switch (name) {\n      case 'email':\n        setEmail(value)\n        break\n      case 'password':\n        setPassword(value)\n        break\n      case 'confirm_password':\n        setConfirmPassword(value)\n        break\n      default:\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    setErrors({})\n    setIsLoading(true)\n    const data = { email, password, confirm_password: confirmPassword }\n    const res = await register(dispatch, data)\n\n    if (isSuccessResponse(res)) {\n      const { from } = location.state || { from: { pathname: '/' } }\n      setIsLoading(false)\n      history.replace(from)\n    } else {\n      setErrors(res.data)\n      setIsLoading(false)\n    }\n  }\n\n  const showErrors = (errors) => {\n    if (errors) {\n      return Object.keys(errors).map((error) => <p key={error}>{errors[error].message}</p>)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} action='#'>\n      <div>\n        <input onChange={handleChange} name='email' type='email' value={email} />\n        {showErrors(errors.email)}\n      </div>\n\n      <div>\n        <input onChange={handleChange} name='password' type='password' value={password} />\n        {showErrors(errors.password)}\n      </div>\n\n      <div>\n        <input onChange={handleChange} name='confirm_password' type='password' value={confirmPassword} />\n        {showErrors(errors.confirm_password)}\n      </div>\n\n      <div>\n        <button type='submit' disabled={isLoading}>\n          Register\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default Register\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router-dom'\nimport { useUserState } from '../../context/userContext'\n\nconst ProtectedRoute = (props) => {\n  const { children, component, role } = props\n  const userData = useUserState()\n  const [isLoading, setIsLoading] = useState(true)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isAuthorized, setIsAuthorized] = useState(false)\n  const Component = component\n\n  const checkAuthenthicated = () => {\n    const { status } = userData\n\n    return status === 'SUCCESS'\n  }\n\n  const checkAuthorized = () => {\n    const { status, user } = userData\n\n    return status === 'SUCCESS' && user.role === role\n  }\n\n  useEffect(() => {\n    if (userData.status === 'REQUEST') {\n      setIsLoading(true)\n    } else {\n      setIsAuthenticated(checkAuthenthicated())\n      setIsAuthorized(checkAuthorized())\n      setIsLoading(false)\n    }\n  }, [userData])\n\n  if (isLoading) return null\n\n  if (isAuthenticated) {\n    if (!isAuthorized) {\n      return <Redirect to={{ pathname: '/' }} />\n    }\n    \n    if (component) {\n      return <Component />\n    }\n\n    return children\n  } else {\n    return <Redirect to={{ pathname: '/login' }} />\n  }\n}\n\nProtectedRoute.propTypes = {\n  role: PropTypes.string\n}\n\nProtectedRoute.defaultProps = {\n  role: 'user'\n}\n\nexport default ProtectedRoute\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useUserDispatch, logout } from '../../context/userContext'\n\nconst Logout = () => {\n  const history = useHistory()\n  const dispatch = useUserDispatch()\n\n  const handleClick = async (e) => {\n    e.preventDefault()\n\n    await logout(dispatch)\n    history.replace('/')\n  }\n\n  return (\n    <a onClick={handleClick} href='#'>\n      Logout\n    </a>\n  )\n}\n\nexport default Logout\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useUserState } from '../../context/userContext'\nimport Logout from '../Logout'\n\nconst Navigation = () => {\n  const userState = useUserState()\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    if (userState.status !== 'REQUEST') {\n      setIsLoading(false)\n    }\n  }, [userState])\n\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to='/'>Home</Link>\n        </li>\n\n        {!isLoading && Object.keys(userState.user).length === 0 ? (\n          <>\n            <li>\n              <Link to='/login'>Login</Link>\n            </li>\n            <li>\n              <Link to='/register'>Register</Link>\n            </li>\n          </>\n        ) : (\n          <>\n            {userState.user.role === 'admin' && (\n              <li>\n                <Link to='/recipe/new'>Add a Recipe</Link>\n              </li>\n            )}\n            <li>\n              <p>{userState.user.email}</p>\n            </li>\n            <li>\n              <Logout />\n            </li>\n          </>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Home, NewRecipe, Login, Register } from '../../pages'\nimport { UserProvider } from '../../context/userContext'\nimport ProtectedRoute from './ProtectedRoute'\nimport Navigation from '../Navigation'\n\nconst App = () => {\n  return (\n    <UserProvider>\n      <Router>\n        <div>\n          <Navigation />\n\n          <Switch>\n            <ProtectedRoute role='admin' exact={true} path='/recipe/new'>\n              <NewRecipe />\n            </ProtectedRoute>\n\n            <Route path='/login'>\n              <Login />\n            </Route>\n\n            <Route path='/register'>\n              <Register />\n            </Route>\n\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </UserProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}